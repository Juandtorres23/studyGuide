

CSS Units 

+ Absolute units
- Pixels (px)
-pt,cm,mm, in, etc

+ Percentages
- are mainly used for widths, and are pretty easy to understand
-Relative to their parent (except on height, where things get weird).

+Relative units
- Relative to font-size
	-em and rem
- Relative to the viewport
	-vw, vh, vmin, vmax


- rem is the root em
the root of an HTML page is always the html element.

Media queries 
how to build a responsive layout

media queries let us add new styles that target only specific contitions
syntax:
@media () {...}
@media media-type () {}
@media media-type and (media-features) {...}

the media type let's us target different types of media 
-screen @media screen {...}
-print @media print {...}
-speech @media speech {...}


the media condition let's us target specific conditions within that media type
-widths @media (min-width: 600px) {...}
-orientation @media (orientation: landscape) {...}
-specific features @media (hover) {...}

both media types and conditions are optional.

we do need to either have a type or condition though.

you can combine a type with a condition by using the and.

@media screen and (min-width: 960px) {...}

Flexbox - changing the axis around 

display: flex - creates columns 
flex-direction: columns; - switches the axis

we are switching the main axis and still able to get all the benefits from flex

- justify-content will now work vertically 
-align-items will now work horizontally
